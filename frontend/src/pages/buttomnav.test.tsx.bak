// src/pages/buttomnav.test.tsx
import { describe, it, expect } from "vitest";
import { MemoryRouter, Routes, Route } from "react-router-dom";
import { render, screen } from "@testing-library/react";
import BottomNav from "./buttomnav";

function renderAt(pathname: string) {
  return render(
    <MemoryRouter initialEntries={[pathname]}>
      <Routes>
        {/* à¹ƒà¸«à¹‰ BottomNav à¸­à¸¢à¸¹à¹ˆà¹ƒà¸™à¸šà¸£à¸´à¸šà¸—à¸‚à¸­à¸‡ Router à¹€à¸ªà¸¡à¸­ */}
        <Route path="*" element={<BottomNav />} />
      </Routes>
    </MemoryRouter>
  );
}

describe("BottomNav", () => {
  it("à¹à¸ªà¸”à¸‡à¸¥à¸´à¸‡à¸à¹Œà¸„à¸£à¸š 3 à¸›à¸¸à¹ˆà¸¡ à¹à¸¥à¸° href à¸–à¸¹à¸à¸•à¹‰à¸­à¸‡", () => {
    const { container } = renderAt("/home");
    const links = container.querySelectorAll("a.nav-button");
    expect(links.length).toBe(3);

    // à¸•à¸£à¸§à¸ˆ href (à¸šà¸²à¸‡à¸—à¸µ JSDOM à¹à¸›à¸¥à¸‡à¹€à¸›à¹‡à¸™ absolute à¸à¹‡à¹€à¸Šà¹‡à¸„à¹à¸šà¸š endsWith)
    expect(links[0].getAttribute("href") ?? "").toMatch(/\/expense$/);
    expect(links[1].getAttribute("href") ?? "").toMatch(/\/home$/);
    expect(links[2].getAttribute("href") ?? "").toMatch(/\/month$/);
  });

  it("à¹€à¸žà¸´à¹ˆà¸¡à¸„à¸¥à¸²à¸ª active à¸–à¸¹à¸à¸›à¸¸à¹ˆà¸¡à¸•à¸²à¸¡à¹€à¸ªà¹‰à¸™à¸—à¸²à¸‡à¸›à¸±à¸ˆà¸ˆà¸¸à¸šà¸±à¸™ - /home", () => {
    const { container } = renderAt("/home");
    const links = container.querySelectorAll("a.nav-button");
    expect(links[1].className).toMatch(/\bactive\b/);
    expect(links[0].className).not.toMatch(/\bactive\b/);
    expect(links[2].className).not.toMatch(/\bactive\b/);
  });

  it("à¹€à¸žà¸´à¹ˆà¸¡à¸„à¸¥à¸²à¸ª active à¸–à¸¹à¸à¸›à¸¸à¹ˆà¸¡à¸•à¸²à¸¡à¹€à¸ªà¹‰à¸™à¸—à¸²à¸‡à¸›à¸±à¸ˆà¸ˆà¸¸à¸šà¸±à¸™ - /expense", () => {
    const { container } = renderAt("/expense");
    const links = container.querySelectorAll("a.nav-button");
    expect(links[0].className).toMatch(/\bactive\b/);
    expect(links[1].className).not.toMatch(/\bactive\b/);
    expect(links[2].className).not.toMatch(/\bactive\b/);
  });

  it("à¹€à¸žà¸´à¹ˆà¸¡à¸„à¸¥à¸²à¸ª active à¸–à¸¹à¸à¸›à¸¸à¹ˆà¸¡à¸•à¸²à¸¡à¹€à¸ªà¹‰à¸™à¸—à¸²à¸‡à¸›à¸±à¸ˆà¸ˆà¸¸à¸šà¸±à¸™ - /month", () => {
    const { container } = renderAt("/month");
    const links = container.querySelectorAll("a.nav-button");
    expect(links[2].className).toMatch(/\bactive\b/);
    expect(links[0].className).not.toMatch(/\bactive\b/);
    expect(links[1].className).not.toMatch(/\bactive\b/);
  });
});



