name: Financial App CI (Fast FE Mode)

on:
  push:
    branches: [ main, dev, testy ]
  pull_request:
    branches: [ main, dev, testy ]
  workflow_dispatch:

concurrency:
  group: financial-app-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend:  ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  fe-quality:
    name: FE Lint & Type Check
    needs: changes
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        working-directory: frontend
        run: npm ci
      - name: Lint if config exists
        working-directory: frontend
        run: |
          if ls .eslintrc* >/dev/null 2>&1; then
            npx eslint . --max-warnings=0
          else
            echo "No ESLint config; skip."
          fi
      - name: Type check if tsconfig exists
        working-directory: frontend
        run: |
          if [ -f tsconfig.json ]; then
            npx tsc --noEmit --skipLibCheck
          else
            echo "No tsconfig.json; skip."
          fi

  frontend-build:
    name: Frontend Build (artifact)
    needs: [changes, fe-quality]
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        working-directory: frontend
        run: npm ci
      - name: Build (if present)
        working-directory: frontend
        run: npm run build --if-present
      - name: Upload FE artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build
          if-no-files-found: ignore

  fe-e2e-fast:
    name: FE E2E (Stubbed, Fast)
    needs: [frontend-build]
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Download FE build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/build

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install FE deps
        working-directory: frontend
        run: npm ci

      - name: Serve FE build
        working-directory: frontend
        run: |
          npx http-server ./build -p 3000 --silent &
          echo "FE_URL=http://localhost:3000" >> "$GITHUB_ENV"
      - name: Wait FE
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: Run Cypress (stubbed API)
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
          install: false
          browser: electron
          headless: true
          config: video=false
        env:
          CI: true
          CYPRESS_baseUrl: ${{ env.FE_URL }}
          CYPRESS_STUB: "1"   # << เปิดโหมด stub
