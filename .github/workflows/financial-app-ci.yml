name: Financial App CI (Cypress + Backend)

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

concurrency:
  group: financial-app-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend:  ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  # ---------- FRONTEND (Cypress auto-detect) ----------
  frontend-e2e:
    name: Frontend E2E Test (Cypress)
    needs: changes
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      # Cache Cypress binary ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô
      - name: Cache Cypress
        uses: actions/cache@v4
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: cypress-${{ runner.os }}-

      # üîé ‡∏ï‡∏£‡∏ß‡∏à scripts ‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏à‡∏∞ start/build ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡πâ‡∏≤‡∏°
      - name: Detect app scripts and maybe start server
        id: detect
        working-directory: frontend
        run: |
          set -e
          HAS_START=$(jq -r 'has("scripts") and (.scripts|has("start"))' package.json)
          HAS_BUILD=$(jq -r 'has("scripts") and (.scripts|has("build"))' package.json)

          if [ "$HAS_BUILD" = "true" ]; then
            echo "==> Found build script. Building and serving static files..."
            npm run build
            npx http-server ./build -p 3000 --silent &
            echo "CYPRESS_baseUrl=http://localhost:3000" >> $GITHUB_ENV
            echo "SERVER=started" >> $GITHUB_ENV
          elif [ "$HAS_START" = "true" ]; then
            echo "==> Found start script. Starting dev server..."
            npm run start &
            echo "WAIT_ON=http://localhost:3000" >> $GITHUB_ENV
            echo "CYPRESS_baseUrl=http://localhost:3000" >> $GITHUB_ENV
            echo "SERVER=started" >> $GITHUB_ENV
          else
            echo "==> No start/build script. Will run Cypress WITHOUT baseUrl."
            echo "SERVER=none" >> $GITHUB_ENV
          fi

      - name: Wait for server (if started)
        if: env.SERVER == 'started'
        run: |
          URL="${{ env.WAIT_ON || 'http://localhost:3000' }}"
          echo "Waiting for $URL ..."
          npx wait-on "$URL" --timeout 120000

      # ‚úÖ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ server ‡∏Å‡πá‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ï‡∏±‡πâ‡∏á baseUrl (‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ú‡πà‡∏≤‡∏ô ENV ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
      - name: Run Cypress tests (headless)
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
          install: false
          browser: electron
          headless: true
          config: video=false
        env:
          CI: true
          # ‡∏ñ‡πâ‡∏≤ step ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏à‡∏≠ server ‡∏à‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß:
          # CYPRESS_baseUrl: http://localhost:3000

      - name: Upload Cypress screenshots (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: frontend/cypress/screenshots/**
          if-no-files-found: ignore

  # ---------- BACKEND ----------
  backend:
    name: Backend Test (Spring Boot)
    needs: changes
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Make mvnw executable
        working-directory: backend
        run: chmod +x ./mvnw

      - name: Run tests
        working-directory: backend
        run: ./mvnw -q -DskipTests=false test

      - name: Package app
        working-directory: backend
        run: ./mvnw -q package
