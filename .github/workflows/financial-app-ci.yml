name: Financial App CI (Detect • Lint • Build • Test)

on:
  push:
    branches: [ testy ]
  pull_request:
    branches: [ testy ]
  workflow_dispatch:

concurrency:
  group: financial-app-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # 1) Detect Changes / Prepare
  detect-changes:
    name: Detect Changes & Prepare
    runs-on: ubuntu-latest
    outputs:
      frontend:  ${{ steps.filter.outputs.frontend }}
      backend:   ${{ steps.filter.outputs.backend }}
      frontendDir: ${{ steps.locate.outputs.frontendDir }}
      hasCypressConfig: ${{ steps.locate.outputs.hasCypressConfig }}
    steps:
      - uses: actions/checkout@v4

      # ตรวจว่าไฟล์ส่วนไหนเปลี่ยน
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            # ครอบทั้งกรณี frontend อยู่ที่ราก และอยู่ในโฟลเดอร์ frontend/
            frontend:
              - 'frontend/**'
              - 'package.json'
              - 'package-lock.json'
              - 'src/**'
              - 'public/**'
              - 'cypress.config.*'
              - '.github/workflows/**'
            backend:
              - 'backend/**'
              - '.github/workflows/**'

      # หาตำแหน่งโฟลเดอร์ frontend ที่แท้จริง + เช็คว่ามี cypress config ไหม
      - id: locate
        name: Locate frontend dir
        run: |
          if [ -f frontend/package.json ]; then
            echo "frontendDir=frontend" >> $GITHUB_OUTPUT
            [ -f frontend/cypress.config.ts ] || [ -f frontend/cypress.config.js ] && echo "hasCypressConfig=true" >> $GITHUB_OUTPUT || echo "hasCypressConfig=false" >> $GITHUB_OUTPUT
          elif [ -f package.json ]; then
            echo "frontendDir=." >> $GITHUB_OUTPUT
            [ -f cypress.config.ts ] || [ -f cypress.config.js ] && echo "hasCypressConfig=true" >> $GITHUB_OUTPUT || echo "hasCypressConfig=false" >> $GITHUB_OUTPUT
          else
            echo "frontendDir=" >> $GITHUB_OUTPUT
            echo "hasCypressConfig=false" >> $GITHUB_OUTPUT
          fi

  # 2) Lint / Static Analysis
  frontend-lint:
    name: Frontend Lint (soft) & TypeCheck (soft)
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.frontend == 'true' && needs.detect-changes.outputs.frontendDir != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install
        run: |
          cd "${{ needs.detect-changes.outputs.frontendDir }}"
          npm ci || npm install
      - name: Lint & TypeCheck (won't fail if missing)
        run: |
          cd "${{ needs.detect-changes.outputs.frontendDir }}"
          npm run lint --if-present || true
          npm run type-check --if-present || true

  backend-lint:
    name: Backend Static Analysis (non-fatal)
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      # สร้างรายงาน checkstyle แต่ไม่ทำให้ล้ม (เหมาะกับโปรเจกต์ที่ยังไม่ได้ตั้งกฎ)
      - name: Generate Checkstyle report (non-fatal)
        run: |
          cd backend
          ./mvnw -B -q -DskipTests=true checkstyle:checkstyle || true

  # 3) Build / Compile
  frontend-build:
    name: Frontend Build
    needs: frontend-lint
    if: ${{ needs.detect-changes.outputs.frontend == 'true' && needs.detect-changes.outputs.frontendDir != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install & Build
        run: |
          cd "${{ needs.detect-changes.outputs.frontendDir }}"
          npm ci || npm install
          npm run build

  backend-build:
    name: Backend Build (Maven)
    needs: backend-lint
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build (skip tests here)
        run: |
          cd backend
          ./mvnw -B clean package -DskipTests=true

  # 4) Test (Unit / Integration / E2E)
  frontend-test:
    name: Frontend Unit Tests
    needs: frontend-build
    if: ${{ needs.detect-changes.outputs.frontend == 'true' && needs.detect-changes.outputs.frontendDir != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Run Frontend Tests (Vitest/Jest via script)
        run: |
          cd "${{ needs.detect-changes.outputs.frontendDir }}"
          npm ci || npm install
          # ถ้าไม่มีสคริปต์ test จะไม่ fail
          npm test --yes || npm run test --if-present || true

  backend-test:
    name: Backend Unit & Integration Tests
    needs: backend-build
    if: ${{ needs.detect-changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Run Maven Tests
        run: |
          cd backend
          ./mvnw -B test

  # (Optional) E2E with Cypress — จะรันเฉพาะเมื่อมี config และมี frontend เปลี่ยน
  e2e:
    name: E2E (Cypress) — auto-skip if no config
    needs: [frontend-build, backend-build]
    if: ${{ needs.detect-changes.outputs.frontend == 'true' && needs.detect-changes.outputs.hasCypressConfig == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Frontend
        run: |
          cd "${{ needs.detect-changes.outputs.frontendDir }}"
          npm ci || npm install
      - name: Run Cypress headless (best-effort)
        run: |
          cd "${{ needs.detect-changes.outputs.frontendDir }}"
          npx cypress run || echo "Cypress tests not set up yet — skipping"
